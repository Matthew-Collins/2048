' Gambas class file

Public Sub Form_Open()

  Me.NewGame

End

Public Sub NewGame()

  Dim Tile As Tile

  Me.Children.Clear
  Me.AddNewTile
  Me.AddNewTile

End

Public Function AddNewTile() As Boolean

  Dim Tile As Tile
  Dim x As Integer
  Dim y As Integer

  If Me.Children.Count < 16 Then
    Do
      x = Rand(0, 3)
      y = Rand(0, 3)
      If IsEmpty(x, y) Then
        Tile = New Tile(Me, x, y)
        Break
      Endif
    Loop
    Return True
  Else
    Return False
  End If

End

Public Function IsEmpty(x As Integer, y As Integer) As Boolean

  Dim Tile As Tile

  For Each Tile In Me.Children
    If Tile.IsCords(x, y) Then
      Return False
    Endif
  Next
  Return True

End

Public Function GetTile(x As Integer, y As Integer) As Tile

  Dim Tile As Tile

  For Each Tile In Me.Children
    If Tile.IsCords(x, y) Then
      Return Tile
    Endif
  Next
  Return Null

End

Public Sub Form_KeyPress()

  Select Case Key.Code
    Case Key.Up
      Me.SmashAndMove(True, 0, 3, 1, 0, 3, 1)
    Case Key.Down
      Me.SmashAndMove(True, 0, 3, 1, 3, 0, -1)
    Case Key.Left
      Me.SmashAndMove(False, 0, 3, 1, 0, 3, 1)
    Case Key.Right
      Me.SmashAndMove(False, 3, 0, -1, 0, 3, 1)
  End Select

End

Public Sub SmashAndMove(MoveY As Boolean, MinX As Short, MaxX As Short, StepX As Short, MinY As Short, MaxY As Short, StepY As Short)

  Dim x As Integer
  Dim y As Integer
  Dim m As Integer
  Dim Target As Tile
  Dim Source As Tile
  Dim Mover As Tile
  Dim Changed As Boolean

  'Smash Tiles
  For x = Minx To MaxX Step StepX
    For y = MinY To MaxY Step StepY
      If Not IsEmpty(x, y) Then
        'Print "Not Empty: ", x, y
        Target = GetTile(x, y)
        For m = If(MoveY, y + StepY, x + StepX) To If(MoveY, MaxY, MaxX) Step If(MoveY, StepY, StepX)
          Source = GetTile(If(MoveY, x, m), If(MoveY, m, y))
          If Not IsNull(Source) Then
            'Print "Smashing"
            Target.Smash(Source)
            Changed = True
            Break
          Endif
        Next
      Endif
    Next
  Next

  'Move Tiles
  For x = Minx To MaxX Step StepX
    For y = MinY To MaxY Step StepY
      If IsEmpty(x, y) Then
        'Print "Empty: ", x, y
        For m = If(MoveY, y + StepY, x + StepX) To If(MoveY, MaxY, MaxX) Step If(MoveY, StepY, StepX)
          Mover = GetTile(If(MoveY, x, m), If(MoveY, m, y))
          If Not IsNull(Mover) Then
            'Print "Moving"
            Mover.SetCords(x, y)
            Changed = True
            Break
          Endif
        Next
      Endif
    Next
  Next

  If Changed Then
    Me.ApplyPendings

    'Add New Tile
    If Me.AddNewTile() = False Then
      Message.Warning("Game Over")
      Me.NewGame
    Endif
  End If

End

Public Sub ApplyPendings()

  Dim Tile As Tile

  For Each Tile In Me.Children
    Tile.ApplyPending()
  Next

End

Public Sub Form_Resize()

  Dim Tile As Tile

  For Each Tile In Me.Children
    Tile.ChangeSize
  Next

End
